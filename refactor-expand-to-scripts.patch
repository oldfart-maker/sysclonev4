From 6f21a9c2d4e54ad9b3c9a8b01cbb1f12e7f4d9a0 Mon Sep 17 00:00:00 2001
From: SysClone Helper <sysclone@example.com>
Date: Mon, 29 Sep 2025 22:05:00 -0400
Subject: [PATCH] refactor: move expand logic to tools scripts; thin Makefile
 recipe

- Add tools/resolve-disk-after-dd.sh to re-resolve the SD parent disk by
  BOOT/ROOT labels after imaging (handles re-enumeration).
- Add tools/expand-rootfs-offline.sh to resize partition 2 and grow ext4.
- Replace img-expand-rootfs-offline recipe with a thin wrapper that calls
  these scripts (no embedded bash soup in the Makefile).

---
 tools/resolve-disk-after-dd.sh | 97 ++++++++++++++++++++++++++++++++++++++++++
 tools/expand-rootfs-offline.sh | 90 +++++++++++++++++++++++++++++++++++++++
 Makefile                       | 15 ++++++-
 3 files changed, 201 insertions(+), 1 deletion(-)
 create mode 100755 tools/resolve-disk-after-dd.sh
 create mode 100755 tools/expand-rootfs-offline.sh

diff --git a/tools/resolve-disk-after-dd.sh b/tools/resolve-disk-after-dd.sh
new file mode 100755
index 0000000..1111111
--- /dev/null
+++ b/tools/resolve-disk-after-dd.sh
@@ -0,0 +1,97 @@
+#!/usr/bin/env bash
+# Resolve the parent disk of the freshly-imaged SD by waiting for labels.
+# Prints the disk path (e.g., /dev/sdX, /dev/mmcblk0, /dev/nvme0n1).
+set -Eeuo pipefail
+
+BOOT_LABEL="${BOOT_LABEL:-BOOT_MNJRO}"
+ROOT_LABEL="${ROOT_LABEL:-ROOT_MNJRO}"
+TIMEOUT="${TIMEOUT:-60}"        # seconds
+SLEEP_INT="${SLEEP_INT:-0.5}"   # seconds
+
+have(){ command -v "$1" >/dev/null 2>&1; }
+die(){ printf '[resolver] ERROR: %s\n' "$*" >&2; exit 1; }
+log(){ printf '[resolver] %s\n' "$*"; }
+
+dev_by_label() {
+  local label="$1" p=""
+  if have blkid; then
+    p="$(blkid -L "$label" 2>/dev/null || true)"
+    [[ -n "${p:-}" ]] && readlink -f -- "$p" && return 0
+  fi
+  p="$(lsblk -rpo NAME,LABEL 2>/dev/null | awk -v L="$label" '$2==L{print $1; exit}')"
+  [[ -n "${p:-}" ]] && readlink -f -- "$p" && return 0
+  return 1
+}
+
+parent_disk() {
+  local part="$1" p
+  p="$(lsblk -nrpo PKNAME "$part" 2>/dev/null | head -n1)"
+  if [[ -z "$p" ]]; then
+    p="$(lsblk -nrpo NAME "$part" | sed -E 's/p?[0-9]+$//')"
+  fi
+  readlink -f -- "${p:-$part}"
+}
+
+main() {
+  have udevadm && udevadm settle || true
+  local t=0 part=""
+  while (( $(printf '%.0f' "$t") < TIMEOUT )); do
+    if part="$(dev_by_label "$ROOT_LABEL")"; then
+      parent_disk "$part"; return 0
+    fi
+    if part="$(dev_by_label "$BOOT_LABEL")"; then
+      parent_disk "$part"; return 0
+    fi
+    sleep "$SLEEP_INT"; t=$(awk -v a="$t" -v b="$SLEEP_INT" 'BEGIN{print a+b}')
+  done
+  die "Timed out waiting for labels ($ROOT_LABEL / $BOOT_LABEL)"
+}
+
+main "$@"
diff --git a/tools/expand-rootfs-offline.sh b/tools/expand-rootfs-offline.sh
new file mode 100755
index 0000000..2222222
--- /dev/null
+++ b/tools/expand-rootfs-offline.sh
@@ -0,0 +1,90 @@
+#!/usr/bin/env bash
+# Offline expand: grow partition 2 to fill disk, then resize ext4.
+set -Eeuo pipefail
+
+DISK="${1:-}"
+[[ -n "$DISK" ]] || { echo "[expand] usage: $0 /dev/sdX|/dev/mmcblk0|/dev/nvme0n1" >&2; exit 2; }
+[[ -b "$DISK" ]] || { echo "[expand] ERROR: not a block device: $DISK" >&2; exit 1; }
+
+log(){ printf '[expand] %s\n' "$*"; }
+die(){ printf '[expand] ERROR: %s\n' "$*" >&2; exit 1; }
+have(){ command -v "$1" >/dev/null 2>&1; }
+
+suffix=""
+[[ "$DISK" =~ (mmcblk|nvme) ]] && suffix="p"
+ROOT_PART="${DISK}${suffix}2"
+
+if ! lsblk -no NAME "$ROOT_PART" >/dev/null 2>&1; then
+  die "expected root partition #2 missing: $ROOT_PART"
+fi
+
+have partprobe && partprobe "$DISK" || true
+sync
+have udevadm && udevadm settle || true
+
+log "resizing partition 2 to 100% on $DISK"
+parted -s "$DISK" unit % print >/dev/null
+parted -s "$DISK" -- resizepart 2 100%
+
+have partprobe && partprobe "$DISK" || true
+sync
+have udevadm && udevadm settle || true
+
+log "checking filesystem on $ROOT_PART"
+e2fsck -fp "$ROOT_PART" || true
+log "resizing filesystem on $ROOT_PART"
+resize2fs "$ROOT_PART"
+log "done"
diff --git a/Makefile b/Makefile
index 3333333..4444444 100644
--- a/Makefile
+++ b/Makefile
@@ -1,3 +1,17 @@
+# --- expand rootfs after imaging (thin wrapper) ---
+.PHONY: img-expand-rootfs-offline
+img-expand-rootfs-offline:
+	@echo "[make] offline expand (auto-resolve by label: $(ROOT_LABEL)/$(BOOT_LABEL))"
+	@set -euo pipefail; \
+	DISK="$$(BOOT_LABEL="$(BOOT_LABEL)" ROOT_LABEL="$(ROOT_LABEL)" bash tools/resolve-disk-after-dd.sh)"; \
+	if [ -z "$$DISK" ] || [ ! -b "$$DISK" ]; then \
+	  if [ -n "$(DEVICE)" ] && [ -b "$(DEVICE)" ]; then DISK="$(DEVICE)"; fi; \
+	fi; \
+	if [ -z "$$DISK" ] || [ ! -b "$$DISK" ]; then \
+	  echo "[host-expand] ERROR: could not resolve SD disk by label or $(DEVICE)"; exit 1; \
+	fi; \
+	echo "[make] expanding on $$DISK"; \
+	bash tools/expand-rootfs-offline.sh "$$DISK"
